#################################################################################
# Unlock all LUKS encrypted devices that are found inside /etc/crypttab.        #
#                                                                               #
# Some notes on /etc/crypttab in Slackware:                                     #
# Only LUKS formatted volumes are supported (except for swap)                   #
# crypttab follows the following format:                                        #
# <luks_name> <device> <password> <options>                                     #
#                                                                               #
# <luks_name>:  This is the name of your LUKS volume.                           #
# For example:  crypt-home                                                      #
#                                                                               #
# <device>:  This is the device containing your LUKS volume.                    #
# For example:  /dev/sda2                                                       #
#                                                                               #
# <password>:  This is either the volume password in plain text, or the name of #
# a key file.  Use 'none' to interactively enter password on boot.              #
#                                                                               #
# <options>:  Comma-separated list of options.  Note that there must be a       #
# password field for any options to be picked up (use a password of 'none' to   #
# get a password prompt at boot).  The following options are supported:         #
#                                                                               #
# discard -- this will cause --allow-discards to be passed to the cryptsetup    #
# program while opening the LUKS volume.                                        #
#                                                                               #
# ro -- this will cause --readonly to be passed to the cryptsetup program while #
# opening the LUKS volume.                                                      #
#                                                                               #
# swap -- this option cannot be used with other options.  The device given will #
# be formatted as a new encrypted volume with a random key on boot, and used as #
# swap.                                                                         #
#################################################################################

# Check if the system is configured to use LUKS
ifelse { [ ! -s /etc/crypttab ] }
{
  if { echo luks: This system is not configured to use LUKS! Aborting... }
  exit 1
}
# NOTE: we only support LUKS formatted volumes (except for swap)!
pipeline { grep -ve "^[[:space:]]*#" -e "^[[:space:]]*$" /etc/crypttab }
forstdin -pd"\n" ENTRY
importas -u ENTRY ENTRY
multidefine -Cd" \t" $ENTRY { luks dev pass opts }
# Skip LUKS volumes that were already unlocked (in the initrd)
if -nt {
  pipeline { cryptsetup status $luks }
  pipeline { head -n 1 }
  grep -q "is active"
}
ifelse { [ $opts = swap ] }
{
  # If any of the volumes is to be used as encrypted swap,
  # then encrypt it using a random key and run mkswap:
  if { echo luks: Creating encrypted swap volume '${luks}' on device '${dev}'... }
  if { cryptsetup --cipher=aes --key-file=/dev/urandom --key-size=256 create $luks $dev }
  mkswap /dev/mapper/$luks
}
# Converting options in /etc/crypttab to appropriate cryptsetup command line options
pipeline { printf $opts }
pipeline { sed "s/ro/--readonly/; s/discard/--allow-discards/; s/,/ /;" }
withstdinas LUKSOPTS
ifthenelse { importas -u LUKSOPTS LUKSOPTS [ -z $LUKSOPTS ] }
{
  echo luks: Unlocking LUKS encrypted volume '${luks}' on device '${dev}'...
}
{
  importas -u LUKSOPTS LUKSOPTS
  echo luks: Unlocking LUKS encrypted volume '${luks}' on device '${dev}' with options '${LUKSOPTS}'...
}
importas -usd" " LUKSOPTS LUKSOPTS
ifelse { [ -z $pass -o $pass = none ] }
{
  # No password was given, or a password of 'none' was given
  redirfd -r 0 /dev/tty0
  redirfd -w 1 /dev/tty0
  fdmove -c 2 1
  ifelse { redirfd -w 2 /dev/null [ -z $LUKSOPTS ] } { cryptsetup luksOpen $dev $luks }
  cryptsetup $LUKSOPTS luksOpen $dev $luks
}
ifelse { [ -f $pass ] }
{
  # The password field was given a key-file filename
  ifelse { redirfd -w 2 /dev/null [ -z $LUKSOPTS ] } { cryptsetup --key-file=$pass luksOpen $dev $luks }
  cryptsetup $LUKSOPTS --key-file=$pass luksOpen $dev $luks
}
# The password was provided in plain text
ifelse { redirfd -w 2 /dev/null [ -z $LUKSOPTS ] } { heredoc 0 "${pass}\n" cryptsetup luksOpen $dev $luks }
heredoc 0 "${pass}\n" cryptsetup $LUKSOPTS luksOpen $dev $luks
